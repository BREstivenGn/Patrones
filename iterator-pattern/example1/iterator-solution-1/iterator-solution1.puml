@startuml
skinparam nodesep 100
skinparam linetype ortho

class Client {}
class WordsCollection {

  -items: string[] = []

  +getItems(): string[]
  +addItem(item: string): void
  +getCount(): number
  +getIterator(): Iterator<string>
  +getReverseIterator(): Iterator<string>
}

interface Aggregator {
  getIterator(): Iterator<string>;
  getReverseIterator(): Iterator<string>;
}



Aggregator .> Iterator: "<<create>>"
WordsCollection <.- Client : "<<use>>"
WordsCollection .> AlphabeticalOrderIterator : "<<create>>"
AlphabeticalOrderIterator o- WordsCollection
Aggregator <.- WordsCollection
Iterator <|.- AlphabeticalOrderIterator : <<bind>> T:string

interface Iterator<T> {
  current(): T;
  next(): T;
  key(): number;
  hasMoreElements(): boolean;
  rewind(): void;
}

class AlphabeticalOrderIterator{
  - collection: WordsCollection;
  - position: number = 0;
  - reverse: boolean = false;

  + constructor(collection: WordsCollection, reverse: boolean = false)
  + current(): string
  + next(): string 
  + key(): number
  + hasMoreElements(): boolean
  + rewind(): void
}


note left of Client

{
  ...
  const iterator = collection.getIterator();
  while (!iterator.hasMoreElements()) {
    console.log(iterator.next());
  }

  const reverseIterator = collection.getReverseIterator();
  while (!reverseIterator.hasMoreElements()) {
    console.log(reverseIterator.next());
  }
  ...
}
end note

@enduml
