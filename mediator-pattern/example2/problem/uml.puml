
@startuml
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor blue


header
<font color=red>Warning:</font>
Educational Purposes
endheader

center footer Carlos Caballero ([[https://www.carloscaballero.io https://www.carloscaballero.io]])


title Mediador Pattern

class Sensor {
  + id: string
  + constructor(id: string)
  + sendMessage(receiver: IoTDevice, message: string): void
  + sendMeasurement(receiver: IoTDevice, data: any): void
  + receiveMessage(sender: IoTDevice, message: string): void
  + receiveMeasurement(sender: IoTDevice, data: any): void
}

class Actuator {
  + id: string
  + constructor(id: string)
  + sendMessage(receiver: IoTDevice, message: string): void
  + sendMeasurement(receiver: IoTDevice, data: any): void
  + receiveMessage(sender: IoTDevice, message: string): void
  + receiveMeasurement(sender: IoTDevice, data: any): void
}

abstract class IoTDevice {
  + id: string
  + constructor(id: string)
  + sendMessage(receiver: IoTDevice, message: string): void
  + sendMeasurement(receiver: IoTDevice, data: any): void
  + receiveMessage(sender: IoTDevice, message: string): void
  + receiveMeasurement(sender: IoTDevice, data: any): void
}

IoTDevice <.. Sensor
IoTDevice <.. Actuator
Sensor <.. Client  : "<<use>>"
Actuator <.. Client  : "<<use>>"

Sensor <.> Actuator: "<<communicate>>"
@enduml


