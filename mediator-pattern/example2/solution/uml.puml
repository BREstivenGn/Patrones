
@startuml
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor blue


header
<font color=red>Warning:</font>
Educational Purposes
endheader

center footer Carlos Caballero ([[https://www.carloscaballero.io https://www.carloscaballero.io]])


title Mediator Pattern

interface IoTMediator {
  + registerDevice(device: IoTDevice): void;
  + sendMessage(sender: IoTDevice, receiverId: string, message: string): void;
  + sendMeasurement(sender: IoTDevice, receiverId: string, data: any): void;
  + receiveMessage(receiver: IoTDevice, senderId: string, message: string): void;
  + receiveMeasurement(receiver: IoTDevice, senderId: string, data: any): void;
  + receiveControlSignal(receiver: IoTDevice, senderId: string, signal: string): void;
}


class ConcreteIoTMediator  {
  - devices: Map<string, IoTDevice>;
  + registerDevice(device: IoTDevice): void;
  + sendMessage(sender: IoTDevice, receiverId: string, message: string): void;
  + sendMeasurement(sender: IoTDevice, receiverId: string, data: any): void;
  + receiveMessage(receiver: IoTDevice, senderId: string, message: string): void;
  + receiveMeasurement(receiver: IoTDevice, senderId: string, data: any): void;
  + receiveControlSignal(receiver: IoTDevice, senderId: string, signal: string): void;
  - findOrError(deviceId: string): IoTDevice;
}


abstract class IoTDevice {
  + id: string
  # mediator: IoTMediator

  + constructor(id: string, mediator: IoTMediator)
  + sendMessage(receiverId: string, message: string): void
  + sendMeasurement(receiverId: string, data: any): void
  + receiveMessage(senderId: string, message: string): void
  + receiveMeasurement(senderId: string, data: any): void
}

class Sensor {
  + constructor(id: string, mediator: IoTMediator)
}


class Actuator {
  + constructor(id: string, mediator: IoTMediator)
  + receiveControlSignal(senderId: string, signal: string): void
}


IoTMediator <. IoTDevice 

IoTDevice <|-- Sensor
IoTDevice <|-- Actuator
IoTMediator <|.. ConcreteIoTMediator

ConcreteIoTMediator -> Sensor: "<<coordinates>>"
ConcreteIoTMediator --> Actuator: "<<coordinates>>"

Sensor <.. Client : "<<use>>"
Actuator <.. Client  : "<<use>>"

@enduml